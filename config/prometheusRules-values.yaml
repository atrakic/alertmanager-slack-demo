---
additionalPrometheusRulesMap:
  rule-name:
    groups:
      - name: drdk.rules
        rules:
          # https://awesome-prometheus-alerts.grep.to/sleep-peacefully
          - record: is_european_summer_time
            expr: |
              (vector(1) and (month() > 3 and month() < 10))
              or
              (vector(1) and (month() == 3 and (day_of_month() - day_of_week()) >= 25) and absent((day_of_month() >= 25) and (day_of_week() == 0)))
              or
              (vector(1) and (month() == 10 and (day_of_month() - day_of_week()) < 25) and absent((day_of_month() >= 25) and (day_of_week() == 0)))
              or
              (vector(1) and ((month() == 10 and hour() < 1) or (month() == 3 and hour() > 0)) and ((day_of_month() >= 25) and (day_of_week() == 0)))
              or
              vector(0)
          - record: copenhagen_time
            expr: time() + 3600 * (1 + is_european_summer_time)
          - record: copenhagen_weekday
            expr: 0 < day_of_week(copenhagen_time) < 6
          - record: copenhagen_daytime
            expr: 8 < copenhagen_hour < 18
            # https://da.wikipedia.org/wiki/Danske_helligdage
          - record: danish_public_holidays
            expr: |
              (vector(1) and month(copenhagen_time) == 1 and day_of_month(copenhagen_time) == 1)
              or
              (vector(1) and month(copenhagen_time) == 12 and day_of_month(copenhagen_time) == 24)
              or
              (vector(1) and month(copenhagen_time) == 12 and day_of_month(copenhagen_time) == 25)
              or
              (vector(1) and month(_copenhagen_time) == 12 and day_of_month(copenhagen_time) == 26)
              or
              (vector(1) and month(copenhagen_time) == 11 and day_of_month(copenhagen_time) == 1)
              or
              vector(0)

          # Test: use hardcoded namespace label to fire alarm:
          - alert: TestingQuietDuringWeekend
            expr: absent(up{job="superimportant"}) and ON() (copenhagen_weekday)
            for: 0m
            labels:
              severity: warning
              team: drdk
              # Hardcoded
              namespace: demo-cronjob
            annotations:
              summary: "Testing only, please ignore"
              description: "Fake CronJob {{$labels.namespace}}/{{ $labels.job }} has been down."

          # https://awesome-prometheus-alerts.grep.to/
          - alert: KubernetesJobFailed
            expr: kube_job_status_failed > 0
            for: 0m
            labels:
              severity: warning
              team: drdk
            annotations:
              summary: Kubernetes Job failed (instance {{ $labels.instance }})
              runbook_url: https://developer.dr.dk/portal/docs/dr-pipeline/alerts-with-alertmanager/#KubernetesJobFailed
              description: "Job {{$labels.namespace}}/{{$labels.exported_job}} failed to complete\n  {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }}"
          - alert: KubernetesCronjobSuspended
            expr: kube_cronjob_spec_suspend != 0
            for: 0m
            labels:
              severity: warning
              team: drdk
            annotations:
              summary: Kubernetes CronJob suspended (instance {{ $labels.instance }})
              runbook_url: https://developer.dr.dk/portal/docs/dr-pipeline/alerts-with-alertmanager/#KubernetesCronjobSuspended
              description: "CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is suspended\n {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }}"
          - alert: KubernetesContainerOomKiller
            expr: |-
              (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total{name!=""} offset 10m >= 1)
              and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1
            for: 0m
            labels:
              severity: warning
              team: drdk
            annotations:
              summary: Kubernetes container oom killer (instance {{ $labels.instance }})
              runbook_url: https://developer.dr.dk/portal/docs/dr-pipeline/alerts-with-alertmanager/#KubernetesContainerOomKiller
              description: Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.
          - alert: ContainerMemoryUsage
            expr: |-
              (sum(node_namespace_pod_container:container_memory_working_set_bytes) BY (instance, name, namespace, pod) / sum(container_spec_memory_limit_bytes > 0) BY (instance, name, namespace, pod) * 100) > 90
            for: 2m
            labels:
              severity: warning
              team: drdk
            annotations:
              summary: Container Memory usage (instance {{ $labels.instance }})
              runbook_url: https://developer.dr.dk/portal/docs/dr-pipeline/alerts-with-alertmanager/#ContainerMemoryUsage
              description: "Container Memory usage: {{ printf \"%.2f\" $value }} is above 90%\n {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }}"
          - alert: ContainerCpuUsage
            expr: |-
              (sum(rate(container_cpu_usage_seconds_total[3m])) BY (instance, name, namespace, pod) * 100) > 90
            for: 2m
            labels:
              severity: warning
              team: drdk
            annotations:
              summary: Container CPU usage (instance {{ $labels.instance }})
              runbook_url: https://developer.dr.dk/portal/docs/dr-pipeline/alerts-with-alertmanager/#ContainerCpuUsage
              description: "Container CPU usage: {{ printf \"%.2f\" $value }} is above 90%\n {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }}"
